C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 19:53:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\keil_5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*======头文件声明区======*/
   2          #include <STC15F2K60S2.H>
   3          
   4          #include "init.h"
   5          #include "led.h"
   6          #include "key.h"
   7          #include "seg.h"
   8          
   9          #include "ds1302.h"
  10          #include "onewire.h"
  11          #include "iic.h"
  12          
  13          /*======变量声明区域======*/
  14          pdata unsigned char Led_Buf[8] = {0,0,0,0,0,0,0,0}; 
  15          idata unsigned char Key_Val,Key_Down,Key_Up,Key_Old;
  16          idata unsigned char Key_Slow_Down;
  17          pdata unsigned char Seg_Buf[8] = {10,10,10,10,10,10,10,10};
  18          idata unsigned char Seg_Pos;
  19          idata unsigned char Seg_Slow_Down; 
  20          
  21          pdata unsigned char Rtc[3] = {23,55,24};
  22          idata unsigned char Rtc_Slow_Down;
  23          idata unsigned int Temperature_x10;
  24          idata unsigned char Temperature_Slow_Down;
  25          idata unsigned char AD_1_Data_x10,AD_3_Data_x10;
  26          idata unsigned char AD_DA_Slow_Down;
  27          pdata unsigned char EEPROM_Data_W[8] = {1,2,3,4,5,6,7,8};
  28          pdata unsigned char EEPROM_Data_R[8] = {0,0,0,0,0,0,0,0};
  29          
  30          idata unsigned char Distance;
  31          idata unsigned char Distance_Slow_Down;
  32          idata unsigned int Frep;
  33          idata unsigned int Timer_1s; 
  34          /*======key======*/
  35          void Key_Proc()
  36          {
  37   1        if(Key_Slow_Down < 10) return;
  38   1        Key_Slow_Down = 0;
  39   1        
  40   1      }
  41          /*======seg======*/
  42          void Seg_Proc()
  43          {
  44   1        if(Seg_Slow_Down < 60) return;
  45   1        Seg_Slow_Down = 0;
  46   1      }
  47          /*======led======*/
  48          void Led_Proc()
  49          {
  50   1        
  51   1      }
  52          /*======Rtc======*/
  53          void Get_Time()
  54          {
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 19:53:13 PAGE 2   

  55   1        if(Rtc_Slow_Down < 100) return;
  56   1        Rtc_Slow_Down = 0;
  57   1      }
  58          
  59          /*======Temperature======*/
  60          void Get_Temperature()
  61          {
  62   1        if(AD_DA_Slow_Down < 100) return;
  63   1        AD_DA_Slow_Down = 0;
  64   1      }
  65          
  66          /*======AD_DA======*/
  67          void AD_DA_Proc()
  68          {
  69   1        if(Temperature_Slow_Down < 150) return;
  70   1        Temperature_Slow_Down = 0;
  71   1      }
  72          /*======Ultrasonic======*/
  73          void Get_Distance()
  74          {
  75   1        if(Distance_Slow_Down < 100) return;
  76   1        Distance_Slow_Down = 0;
  77   1      }
  78          /*======按键处理函数======*/
  79          /*======定时器0======*/
  80          void Timer0_Init(void)    //1毫秒@12.000MHz
  81          {
  82   1        AUXR &= 0x7F;     //定时器时钟12T模式
  83   1        TMOD &= 0xF0;     //设置定时器模式
  84   1        TMOD |= 0x05;     //设置计数器模式
  85   1        TL0 = 0x00;       //设置定时初始值
  86   1        TH0 = 0x00;       //设置定时初始值
  87   1        TF0 = 0;        //清除TF0标志
  88   1        TR0 = 1;        //定时器0开始计时
  89   1      }
  90          
  91          /*======定时器1======*/
  92          void Timer1_Init(void)    //1毫秒@12.000MHz
  93          {
  94   1        AUXR &= 0xBF;     //定时器时钟12T模式
  95   1        TMOD &= 0x0F;     //设置定时器模式
  96   1        TL1 = 0x18;       //设置定时初始值
  97   1        TH1 = 0xFC;       //设置定时初始值
  98   1        TF1 = 0;        //清除TF1标志
  99   1        TR1 = 1;        //定时器1开始计时
 100   1        ET1 = 1;        //使能定时器1中断
 101   1        EA = 1;
 102   1      }
 103          /*======定时器1中断======*/
 104          void Timer1_Isr(void) interrupt 3
 105          {
 106   1        Key_Slow_Down++;
 107   1        Seg_Slow_Down++;
 108   1        Temperature_Slow_Down++;
 109   1        Rtc_Slow_Down++;
 110   1        AD_DA_Slow_Down++;
 111   1        
 112   1        Seg_Pos = (++Seg_Pos) % 8;
 113   1        if(Seg_Buf[Seg_Pos] > 20)
 114   1          Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos] - '.',1);
 115   1        else
 116   1          Seg_Disp(Seg_Pos,Seg_Buf[Seg_Pos],0);
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 19:53:13 PAGE 3   

 117   1        Led_Disp(Led_Buf);
 118   1        
 119   1        if(++Timer_1s == 1000)
 120   1        {
 121   2          Timer_1s = 0;
 122   2          Frep = (TH0 << 8) | TL0;
 123   2          TH0 = TL0 = 0;
 124   2        }
 125   1      }
 126          
 127          /*======main======*/
 128          void main()
 129          {
 130   1        System_Init();
 131   1        
 132   1        EEPROM_Read(EEPROM_Data_R,0,8);
 133   1        EEPROM_Write(EEPROM_Data_W,0,8);
 134   1        EEPROM_Read(EEPROM_Data_R,0,8);
 135   1        
 136   1        Timer0_Init();
 137   1        Timer1_Init();
 138   1        while(1)
 139   1        {
 140   2          Key_Proc();
 141   2          Seg_Proc();
 142   2          Led_Proc();
 143   2          Get_Time();
 144   2          Get_Temperature();
 145   2          AD_DA_Proc();
 146   2          
 147   2        }
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     35    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     20    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
